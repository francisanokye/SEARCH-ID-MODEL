
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin20

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(macpan2)
> library(shellpipes)
> rpcall("calibrate.Rout calibrate.R timevar_spec.rds seroprevdata.rds")
> library(conflicted)
> library(tidyverse)
> library(dplyr)
> library(ggthemes)
> library(broom.mixed)
> set.seed(2024)
> 
> #conflicted_prefer("rdsSave", "shellpipes")
> 
> loadEnvironments()
> 
> timevar_spec <- rdsRead("timevar_spec.rds")
> 
> seroprevdata <- rdsRead("seroprevdata.rds")
> 
> outputs =c("S", "E", "A", "R", "C", "H", "I")
> 
> population = 510550
> 
> calibrator <- mp_tmb_calibrator(
+   spec = timevar_spec,
+   data = seroprevdata,
+   traj = "cases",
+   tv = mp_rbf("beta", dimension = 7, seed = 1L),
+   outputs = c("cases",outputs),
+   par = c("beta_values","gamma")#,"mu")#,"phi")#, "phi","gamma", "xi", "theta", "omega", "eta") 
+ )
> 
> mp_optimize(calibrator)
outer mgc:  12817871 
outer mgc:  8041947 
outer mgc:  694865.4 
outer mgc:  332638.4 
outer mgc:  331206.8 
outer mgc:  115895.2 
outer mgc:  95533.05 
outer mgc:  12707.66 
outer mgc:  14726.8 
outer mgc:  4422.366 
outer mgc:  902.3375 
outer mgc:  3.758004 
outer mgc:  0.0008251948 
$par
      params       params       params       params       params       params 
 1.042815851  0.286418877  0.232497207  0.233206032  0.230865964  0.085748565 
      params       params       params       params       params       params 
-0.006264538  0.001836433 -0.008356286  0.015952808  0.003295078 -0.008204684 
      params 
 0.004874291 

$objective
[1] 1049.775

$convergence
[1] 1

$iterations
[1] 13

$evaluations
function gradient 
      15       13 

$message
[1] "singular convergence (7)"

> 
> 
> ##########################################################################################
> # see here, https://github.com/canmod/macpan2/issues/179
> backtrans <- function(x) {
+   vars1 <- intersect(c("default", "estimate", "conf.low", "conf.high"), names(x))
+   prefix <- stringr::str_extract(x[["mat"]], "^log(it)?_")  |> tidyr::replace_na("none")
+   sx <- split(x, prefix)
+   for (ptype in setdiff(names(sx), "none")) {
+     link <- make.link(stringr::str_remove(ptype, "_"))
+     sx[[ptype]] <- (sx[[ptype]]
+                     |> mutate(across(std.error, ~link$mu.eta(estimate)*.))
+                     |> mutate(across(any_of(vars1), link$linkinv))
+                     |> mutate(across(mat, ~stringr::str_remove(., paste0("^", ptype))))
+     )
+   }
+   bind_rows(sx)
+ }
> ##########################################################################################
> 
> coeff <- mp_tmb_coef(calibrator, conf.int = TRUE) |> backtrans()
outer mgc:  0.0008251948 
outer mgc:  5207.906 
outer mgc:  5215.955 
outer mgc:  11503.41 
outer mgc:  11543.08 
outer mgc:  41408.36 
outer mgc:  41682.96 
outer mgc:  50465.47 
outer mgc:  50688.64 
outer mgc:  72690.19 
outer mgc:  74605.45 
outer mgc:  226193.5 
outer mgc:  220237.5 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  5911239 
> print(coeff)
        term           mat row col      default  type     estimate std.error
1     params   beta_values   0   0  0.780000000 fixed  1.042815850       NaN
2   params.1   beta_values   1   0  0.720000000 fixed  0.286418877       NaN
3  params.10 time_var_beta   4   0  0.003295078 fixed  0.003295078       NaN
4  params.11 time_var_beta   5   0 -0.008204684 fixed -0.008204684       NaN
5  params.12 time_var_beta   6   0  0.004874291 fixed  0.004874291       NaN
6   params.2   beta_values   2   0  0.160000000 fixed  0.232497207       NaN
7   params.3   beta_values   3   0  0.220000000 fixed  0.233206032       NaN
8   params.4   beta_values   4   0  0.140000000 fixed  0.230865964       NaN
9   params.5         gamma   0   0  0.100000000 fixed  0.085748565       NaN
10  params.6 time_var_beta   0   0 -0.006264538 fixed -0.006264538       NaN
11  params.7 time_var_beta   1   0  0.001836433 fixed  0.001836433       NaN
12  params.8 time_var_beta   2   0 -0.008356286 fixed -0.008356286       NaN
13  params.9 time_var_beta   3   0  0.015952808 fixed  0.015952808       NaN
   conf.low conf.high
1       NaN       NaN
2       NaN       NaN
3       NaN       NaN
4       NaN       NaN
5       NaN       NaN
6       NaN       NaN
7       NaN       NaN
8       NaN       NaN
9       NaN       NaN
10      NaN       NaN
11      NaN       NaN
12      NaN       NaN
13      NaN       NaN
> ############ Visualize simulation with calibrated paramters against the observed data ###########
> 
> 
> plot_fit = function(cal_object) {
+   fitted_data = mp_trajectory_sd(cal_object)
+   start_date <- as.Date("2021-12-15")
+   fitted_data$dates <- start_date + fitted_data$time - 1
+   
+   seroprevdata <- seroprevdata[(seroprevdata$dates >= "2021-12-15") & (seroprevdata$dates <= "2022-06-02"),]
+ 
+   unique_values_matrix <- length(unique(fitted_data$matrix))
+   beta_changepoints = c(0, 10, 21, 55, 90)
+ 
+   pp <- (ggplot(data = fitted_data, aes(x = time, y= value))
+         + geom_line(aes(color = matrix),linewidth = 1.5)
+         + geom_point(data = seroprevdata, aes(x = time, y = value, color = "data"))
+         + geom_vline(aes(xintercept = x), linetype = "dashed",color = "gold4" , alpha = 0.5, data = data.frame(x = beta_changepoints))
+         #+ geom_vline(xintercept = as.Date("2022-03-18"), colour = "purple", linetype = 4, size = 1)
+         #+ geom_vline(xintercept = as.Date("2021-12-23"), colour = "gold4", linetype = 4, size = 1)
+         #+ geom_vline(xintercept = as.Date("2022-01-03"), colour = "gold4", linetype = 4, size = 1)
+         #+ geom_vline(xintercept = as.Date("2022-02-06"), colour = "gold4", linetype = 4, size = 1)
+         #+ geom_vline(xintercept = as.Date("2022-03-14"), colour = "gold4", linetype = 1, size = 1)
+         + labs(x = "Date (Dec 2021 - June 2022)", y = "Incidence", title = "SEARCHI Model Fit", color = "")
+         + facet_wrap(~matrix, scales = "free")
+         + theme_clean()
+         + theme(axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
+           axis.title.x = element_text(size = 15, color = "black", face = "bold"),
+           axis.text.y = element_text(size = 10),
+           axis.title.y = element_text(size = 15, color = "black", face = "bold"),
+           plot.title = element_text(size = 18, face = "bold", color = "black", hjust = 0.5),
+           legend.position = c(0.85, 0.10),
+           legend.title = element_text(size = 15),
+           legend.text = element_text(size = 10),
+           legend.background = element_rect(color = NA),
+           legend.margin = margin(0, 0, 0, 0),
+           plot.background = element_blank()) +
+           theme(plot.title = element_text(hjust = 0.5))
+        )
+ 
+   if (unique_values_matrix == 1) {
+     pp <- pp + scale_color_manual(labels = c("fit", "data"), values = c("red", "black"))
+     pp <- pp + theme(legend.position = c(0.85, 0.35))
+   } else {
+     pp <- pp + scale_color_manual(labels = c("A", "C", "fit", "data", "E", "H", "I", "R", "S"),
+                                 values = c("#008080", "blue", "red", "black", "brown", "orange", "green", "#2192FF", "magenta"))
+   }
+ 
+   print(pp)
+ }
> 
> plot_fit(calibrator)
outer mgc:  0.0008251948 
outer mgc:  5207.906 
outer mgc:  5215.955 
outer mgc:  11503.41 
outer mgc:  11543.08 
outer mgc:  41408.36 
outer mgc:  41682.96 
outer mgc:  50465.47 
outer mgc:  50688.64 
outer mgc:  72690.19 
outer mgc:  74605.45 
outer mgc:  226193.5 
outer mgc:  220237.5 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
outer mgc:  0.0008251948 
> 
> 
> rdsSave(calibrator)
> 
> 
> 
> 
> 
