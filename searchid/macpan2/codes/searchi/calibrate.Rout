
R version 4.4.1 (2024-06-14) -- "Race for Your Life"
Copyright (C) 2024 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin20

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(macpan2)
> library(shellpipes)
> library(conflicted)
> library(tidyverse)
> library(dplyr)
> library(ggthemes)
> library(broom.mixed)
> 
> #conflicted_prefer("rdsSave", "shellpipes")
> 
> loadEnvironments()
> 
> timevar_spec <- rdsRead("timevar_spec.rds")
> 
> seroprevdata <- rdsRead("seroprevdata.rds")
> 
> calibrator <- mp_tmb_calibrator(
+   spec = timevar_spec |> mp_rk4(), 
+   data = seroprevdata, 
+   traj = "cases", 
+   outputs = "cases", 
+   par = c("beta_values",  "phi", "mu", "xi", "theta", "omega", "alpha", "E0", "A0", "I0")
+ )
> 
> mp_optimize(calibrator)
outer mgc:  0 
$par
     params      params      params      params      params      params 
  -2.975930   -1.877252   -1.871452   -1.884665   -1.881903    0.200000 
     params      params      params      params      params      params 
   0.600000    0.500000    0.150000    0.100000    0.001000 2000.000000 
     params      params 
  10.000000    1.000000 

$objective
[1] 147366.3

$convergence
[1] 0

$iterations
[1] 1

$evaluations
function gradient 
       1        1 

$message
[1] "relative convergence (4)"

> 
> 
> ##########################################################################################
> # see here, https://github.com/canmod/macpan2/issues/179
> backtrans <- function(x) {
+   vars1 <- intersect(c("default", "estimate", "conf.low", "conf.high"), names(x))
+   prefix <- stringr::str_extract(x[["mat"]], "^log(it)?_")  |> tidyr::replace_na("none")
+   sx <- split(x, prefix)
+   for (ptype in setdiff(names(sx), "none")) {
+     link <- make.link(stringr::str_remove(ptype, "_"))
+     sx[[ptype]] <- (sx[[ptype]]
+                     |> mutate(across(std.error, ~link$mu.eta(estimate)*.))
+                     |> mutate(across(any_of(vars1), link$linkinv))
+                     |> mutate(across(mat, ~stringr::str_remove(., paste0("^", ptype))))
+     )
+   }
+   bind_rows(sx)
+ }
> ##########################################################################################
> 
> coeff <- mp_tmb_coef(calibrator, conf.int = TRUE) |> backtrans()
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
> print(coeff)
        term         mat row col     default  type    estimate std.error
1     params beta_values   0   0   -2.975930 fixed   -2.975930       NaN
2   params.1 beta_values   1   0   -1.877252 fixed   -1.877252       NaN
3  params.10       alpha   0   0    0.001000 fixed    0.001000       NaN
4  params.11          E0   0   0 2000.000000 fixed 2000.000000       NaN
5  params.12          A0   0   0   10.000000 fixed   10.000000       NaN
6  params.13          I0   0   0    1.000000 fixed    1.000000       NaN
7   params.2 beta_values   2   0   -1.871452 fixed   -1.871452       NaN
8   params.3 beta_values   3   0   -1.884665 fixed   -1.884665       NaN
9   params.4 beta_values   4   0   -1.881903 fixed   -1.881903       NaN
10  params.5         phi   0   0    0.200000 fixed    0.200000       NaN
11  params.6          mu   0   0    0.600000 fixed    0.600000       NaN
12  params.7          xi   0   0    0.500000 fixed    0.500000       NaN
13  params.8       theta   0   0    0.150000 fixed    0.150000       NaN
14  params.9       omega   0   0    0.100000 fixed    0.100000       NaN
   conf.low conf.high
1       NaN       NaN
2       NaN       NaN
3       NaN       NaN
4       NaN       NaN
5       NaN       NaN
6       NaN       NaN
7       NaN       NaN
8       NaN       NaN
9       NaN       NaN
10      NaN       NaN
11      NaN       NaN
12      NaN       NaN
13      NaN       NaN
14      NaN       NaN
> 
> 
> ############ Visualize simulation with calibrated paramters against the observed data ###########
> 
> plot_fit = function(cal_object) {
+   fitted_data = mp_trajectory_sd(cal_object)
+   fitted_data$dates <- seq.Date(from = as.Date("2021-12-01"), by = "day", length.out = nrow(fitted_data))
+   fitted_data <- fitted_data[fitted_data$dates > "2021-12-14",]
+   seroprevdata <- seroprevdata[seroprevdata$dates > "2021-12-14",]
+   ggplot(seroprevdata, aes(x = dates, y = value, colour = "black"), na.rm = TRUE) +
+     geom_point(size = 2) +
+     geom_line(aes(x = dates, y = value,colour = "red"), data = fitted_data) +
+     # geom_ribbon(aes(x = dates, ymin = conf.low, ymax = conf.high), data = fitted_data, alpha = 0.2, fill = "red") +
+     labs(x = "Date (Dec 2021  - June 2022)", y = "Omicron True Infections", title = "SEARCHI Model Fit With macpan2", color = "") +
+     scale_color_manual(labels = c("true incidence", "macpan2 fit"),values = c("black","orange")) +
+     annotate("text", x = as.Date("2021-12-18"), y = 700, label = expression(beta[2] == 0.20),size = 6,angle = 90, hjust = 1, color = "black")+
+   annotate("text", x = as.Date("2021-12-28"), y = 700, label = expression(beta[3] == 5.21),size = 6,angle = 90, hjust = 1,color = "black")+
+   annotate("text", x = as.Date("2022-01-30"), y = 550, label = expression(beta[4] == 0.62),size = 6,angle = 0, hjust = 1, color = "black")+
+   # annotate("text", x = as.Date("2022-02-05"), y = 3, label = "Alert Level 3",size = 5,angle = 10, hjust = 1, color = "black")+
+   annotate("text", x = as.Date("2022-03-03"), y = 550, label = expression(beta[3] == 0.70),size = 6,angle = 0, hjust = 1, color = "black")+
+   annotate("text", x = as.Date("2022-05-01"), y = 1500, label = expression(beta[0] == 0.82),size = 6, hjust = 1, color = "black")+
+     theme_clean() +
+     geom_vline(xintercept = as.Date("2022-03-18"), colour = "purple", linetype = 6, size = 1)  +
+       # geom_vline(xintercept = as.Date("2022-04-10"), colour = "purple", linetype = 6, size = 2)  +
+     geom_vline(xintercept = as.Date("2021-12-23"), colour = "gold4", linetype = 2, size = 1)  +
+     geom_vline(xintercept = as.Date("2022-01-03"), colour = "gold4", linetype = 2, size = 1)  +
+     geom_vline(xintercept = as.Date("2022-02-06"), colour = "gold4", linetype = 2, size = 1)  +
+     geom_vline(xintercept = as.Date("2022-03-14"), colour = "gold4", linetype = 1, size = 1)  +
+     annotate("text", x = as.Date("2022-03-05"), y = 2200, label = "Pre-Cancellation of Public \nHealth Emergency Declaration",size=5, hjust=1, color = "darkblue")+
+     annotate("text", x = as.Date("2022-05-14"), y = 2200, label = "Post Cancellation of Public \nHealth Emergency Declaration",size=5, hjust=1,color = "darkblue")+
+     theme(axis.text.x = element_text(size = 20, angle = 45, hjust = 1),
+           axis.title.x = element_text(size = 20, color = "black", face = "bold"),
+           axis.text.y = element_text(size = 20),
+           axis.title.y = element_text(size = 20, color = "black", face = "bold"),
+           plot.title = element_text(size = 18, face = "bold", color = "black", hjust = 0.5),
+           legend.position = c(0.75, 0.35),
+           legend.title = element_text(size = 20),
+           legend.text = element_text(size = 15),
+           legend.background = element_rect(color = NA),
+           legend.margin = margin(0, 0, 0, 0),
+           plot.background = element_blank()) +
+           theme(plot.title = element_text(hjust = 0.5))
+ }
> 
> plot_fit(calibrator)
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
outer mgc:  0 
> 
> 
> 
> 
> 
> 
